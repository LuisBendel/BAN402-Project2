reset;
model BAN402_Project2_Part_D_3.mod;
data BAN402_Project2_Part_D_3.dat;

option solver gurobi;
option gurobi_options 'outlev=1';
option show_stats 1;

param EScore;
param EScoreK symbolic;
param EScoreK_sum;
param tripsK symbolic;
param opcenter symbolic;

for{e in I}{

	# calculate the minimum 
	let EScoreMin := (e * 1460);

	solve;
	
	# display all variables in the console
	display t;
	display x;
	display y;
	display u;
	
	###################### make a nice output file #############################
	
	let EScore := sum{k in K,i in C, n in N}u[i,k,n]*E[i,n] ;
	
	print "" > BAN402_Project2_Part_D_3.txt;
	print "" > BAN402_Project2_Part_D_3.txt;
	print "#####################################################################################" > BAN402_Project2_Part_D_3.txt;
	print "" > BAN402_Project2_Part_D_3.txt;
	
	# print the minimum required emergency score for this instance
	print "Solutions for alpha = " & e & ":" > BAN402_Project2_Part_D_3.txt;
	print "The minimum required emergency score is " & EScoreMin > BAN402_Project2_Part_D_3.txt;
	print "The achieved emergency score is " & EScore > BAN402_Project2_Part_D_3.txt;
	print "" > BAN402_Project2_Part_D_3.txt;
	
	# print objective value
	print "The objective value (minimum longest travel time of any truck) is " & tmin > BAN402_Project2_Part_D_3.txt;
	print "" > BAN402_Project2_Part_D_3.txt;
	
	# print the travel including loading times for each truck
	print "Travel time for each truck (incl. loading): " > BAN402_Project2_Part_D_3.txt;
	for{k in K}{
	 print "Truck " & k & ": " & t[k] > BAN402_Project2_Part_D_3.txt;
	}
	print "" > BAN402_Project2_Part_D_3.txt;

	# print the trips of the trucks
	
	for{k in K}{
		let EScoreK := "Emergency Score truck " & k & ": ";
		let EScoreK_sum := 0;
		for{n in 1..4}{
			for{i in C}{
				if(u[i,k,n] = 1) then {
					let EScoreK_sum := EScoreK_sum + (u[i,k,n]*E[i,n]);
				}
			}
		}
		let EScoreK := EScoreK & EScoreK_sum;
		print EScoreK > BAN402_Project2_Part_D_3.txt;
	}
	
	print "" > BAN402_Project2_Part_D_3.txt;
	
	for{k in K}{
		let tripsK := "Trip for truck " & k & ": ";
		let opcenter := "Operation Center for truck " & k & ": ";
		for{n in 1..4}{
			for{i in C}{
				if(i in S and x[i,k,n] = 1) then {
					let opcenter := opcenter & i;
				}
				for{j in C}{
					if(y[k,i,j,n] = 1 and n<4) then {
						let tripsK := tripsK & "from " & i & " --> " & j & ", ";
					}
					else if(y[k,i,j,n] = 1 and n=4) then {
						let tripsK := tripsK & "from "  & i & " --> " & j;
					}
				}	
			}
		}
		print opcenter > BAN402_Project2_Part_D_3.txt;
		print tripsK > BAN402_Project2_Part_D_3.txt;
		print "" > BAN402_Project2_Part_D_3.txt;
	}
	
	
}	

